{
  "name": "generator-flight",
  "version": "0.8.0",
  "description": "Generator for scaffolding out a Flight web app",
  "author": {
    "name": "Twitter Inc"
  },
  "main": "lib/generators/app/index.js",
  "keywords": [
    "app",
    "flight",
    "framework",
    "generator",
    "web",
    "yeoman-generator"
  ],
  "homepage": "https://github.com/flightjs/generator-flight",
  "bugs": {
    "url": "https://github.com/flightjs/generator-flight/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/flightjs/generator-flight.git"
  },
  "scripts": {
    "test": "mocha --no-colors --reporter spec"
  },
  "dependencies": {
    "yeoman-generator": "~0.16.0"
  },
  "peerDependencies": {
    "yo": ">=1.0.0"
  },
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# Flight generator\n\n[![Build Status](https://secure.travis-ci.org/flightjs/generator-flight.png?branch=master)](http://travis-ci.org/flightjs/generator-flight)\n\nA [Yeoman](http://yeoman.io/) generator for\n[Flight](http://flightjs.github.io/), Twitter's client-side JavaScript\nframework. Get up and running with everything you need to create an\napplication.\n\nNOTE: A separate [Flight package generator](https://github.com/flightjs/generator-flight-package)\nis available for creating standalone Flight components.\n\n\n## Recommended setup\n\nInstall [Node.js](http://nodejs.org/) (which comes with npm). It's best to have\nnpm version 1.2.x or above installed.\n\nNext, globally install the Flight generator. This will automatically install\n[Bower](http://bower.io/) and [Yo](http://yeoman.io/) as global dependencies.\nThese tools will help manage your dependencies and generate the boilerplate\nFlight application.\n\n```\nnpm install -g generator-flight\n```\n\nMake a new directory, and `cd` into it:\n\n```\nmkdir flight-app && cd $_\n```\n\nYou're now ready to generate an app!\n\n\n## Main generator\n\nTo generate a Flight-based application:\n\n```\nyo flight <app-name>\n```\n\n**N.B.** All your Node and client-side dependencies will be installed\nautomatically unless you include the `--skip-install` option.\n\n\n## All generators and their output\n\nAvailable generators (to be run in the root directory of a project).\n\n* `flight <app-name>` (aka `flight:app`)\n* `flight:component <component-name>`\n* `flight:mixin <mixin-name>`\n* `flight:page <page-name>`\n* `flight:all`\n\n### flight:app\n\nScaffolds a Flight application file structure, installs all the library code\nyou need, and correctly configures your test setup. The app generator will\nprompt you to optionally install Bootstrap or Normalize.css.\n\nExample:\n\n```\nyo flight my_app\n```\n\nProduces:\n\n```\n.\n├── app\n│   ├── bower_components\n│   │   ├── es5-shim\n│   │   ├── flight\n│   │   ├── jasmine-flight\n│   │   ├── jquery\n│   │   └── requirejs\n│   ├── css\n│   │   └── main.css\n│   ├── img\n│   ├── js\n│   │   ├── component\n│   │   ├── page\n│   │   │   └── default.js\n│   │   └── main.js\n│   ├── 404.html\n│   ├── favicon.ico\n│   ├── index.html\n│   └── robots.txt\n├── node_modules\n├── test\n│   └── test-main.js\n├── .bowerrc\n├── .gitattributes\n├── .gitignore\n├── .jshintrc\n├── .travis.yml\n├── CONTRIBUTING.md\n├── LICENSE.md\n├── README.md\n├── bower.json\n├── gulpfile.js\n├── karma.conf.js\n└── package.json\n```\n\n#### Locally installed software\n\nAutomatically installs all the Flight framework dependencies, and sets up a\nNode-based toolchain for your development workflow.\n\n**via Bower**\n\n* [Flight](http://flightjs.github.io/) (and its dependencies: ES5 Shim, jQuery)\n* [RequireJS](http://requirejs.org/)\n* [Jasmine jQuery](https://github.com/velesin/jasmine-jquery) extensions\n* [Jasmine Flight](https://github.com/flightjs/jasmine-flight) extensions\n* (optional) [Bootstrap](http://getbootstrap.com/)\n* (optional) [Normalize.css](http://necolas.github.io/normalize.css)\n\n**via npm**\n\n* Flight generator (installed as a local dependency)\n* [Gulp](http://gulpjs.com/) task runner\n* [Karma](http://karma-runner.github.io/) unit test runner\n* [Node-Static](https://github.com/cloudhead/node-static/) file server\n\n### flight:component\n\nGenerates a component in `app/js/component`.\n\nExample:\n\n```\nyo flight:component tweet_box\n```\n\nProduces `app/js/component/tweet_box.js`:\n\n```js\ndefine(function (require) {\n  var defineComponent = require('flight/lib/component');\n\n  return defineComponent(tweetBox);\n\n  function tweetBox() {\n    this.attributes({});\n    this.after('initialize', function () {});\n  }\n});\n```\n\nAnd the test file `test/spec/component/tweet_box.spec.js`:\n\n```js\ndescribeComponent('component/tweet_box', function () {\n  // Initialize the component and attach it to the DOM\n  beforeEach(function () {\n    setupComponent();\n  });\n\n  it('should be defined', function () {\n    expect(this.component).toBeDefined();\n  });\n\n  it('should do something', function () {\n    expect(true).toBe(false);\n  });\n});\n```\n\n### flight:mixin\n\nGenerates a mixin component in `app/js/component`.\n\nExample:\n\n```\nyo flight:mixin tweet_actions\n```\n\nProduces `app/js/component/with_tweet_actions.js`:\n\n```js\ndefine(function (require) {\n  return withTweetActions;\n\n  function withTweetActions() {\n    this.attributes({});\n    this.after('initialize', function () {});\n  }\n});\n```\n\nAnd the test file `test/spec/component/with_tweet_box.spec.js`:\n\n```js\ndescribeMixin('component/with_tweet_box', function () {\n  // Initialize the component and attach it to the DOM\n  beforeEach(function () {\n    setupComponent();\n  });\n\n  it('should be defined', function () {\n    expect(this.component).toBeDefined();\n  });\n\n  it('should do something');\n});\n```\n\n### flight:page\n\nGenerates a page component in `app/js/page`.\n\nExample:\n\n```\nyo flight:page settings\n```\n\nProduces `app/js/page/settings.js`:\n\n```js\ndefine(function (require) {\n  // var myComponent = require('component/my_component');\n\n  return initialize;\n\n  function initialize() {\n    // myComponent.attachTo(document);\n  }\n});\n```\n\n### flight:all\n\nShortcut that runs `flight:app`, `flight:component my_component`, and\n`flight:mixin my_mixin`.\n\n\n## Developing your application\n\nThe [generated application's README](lib/templates/application/README.md)\ncontains instructions on how to run the tests, server, and other tasks.\n\n\n## Contributing to this project\n\nAnyone and everyone is welcome to contribute. Please take a moment to\nreview the [guidelines for contributing](CONTRIBUTING.md).\n\n* [Bug reports](CONTRIBUTING.md#bugs)\n* [Feature requests](CONTRIBUTING.md#features)\n* [Pull requests](CONTRIBUTING.md#pull-requests)\n\n\n## Authors\n\n* Nicolas Gallagher [@necolas](https://twitter.com/necolas)\n\n\n## License\n\nCopyright 2013 Twitter, Inc and other contributors.\n\nLicensed under the MIT License.\n",
  "readmeFilename": "README.md",
  "_id": "generator-flight@0.8.0",
  "_from": "generator-flight@>=0.8.0 <0.9.0"
}
